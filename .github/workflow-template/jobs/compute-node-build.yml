jobs:
  compute-node-build-$[<profile>]:
    needs: start-runner-$[<runner>] # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner-$[<runner>].outputs.label }} # run the job on the newly created runner
    container:
      image: public.ecr.aws/x5u3w5h6/risingwave-build-env:latest
      options: --security-opt seccomp=unconfined
    name: compute-node-build-$[<profile>]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: "3.x"

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt

      - name: Install required components
        run: |
          apt-get update -yy -o Acquire::Retries=3
          apt-get install --upgrade -yy lld -o Acquire::Retries=3

      - name: Cache Cargo home
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ env.CACHE_KEY_SUFFIX }}-build

      - name: Install required tools
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cargo install cargo-sort cargo-hakari

      - name: Run rust cargo-sort check
        run: |
          cargo sort -c -w

      - name: Run rust cargo-hakari check
        run: |
          cargo hakari verify

      - name: Run rust format check
        run: |
          cargo fmt --all -- --check

      - name: Build Rust components
        # Here we only build necessary binaries that will be uploaded. Other binaries won't be built.
        # We will only run clippy checks over other binaries.
        run: |
          cargo build -p risingwave_cmd_all -p risedev -p risingwave_regress_test --profile $[<profile>]

      - name: Compress RisingWave debug info
        run: |
          objcopy --compress-debug-sections=zlib-gnu target/$[<target>]/risingwave

      - uses: actions/upload-artifact@v2
        with:
          name: risingwave-$[<profile>]
          if-no-files-found: error
          path: |
            target/$[<target>]/risingwave

      - uses: actions/upload-artifact@v2
        with:
          name: risingwave_regress_test-$[<profile>]
          if-no-files-found: error
          path: |
            target/$[<target>]/risingwave_regress_test

      - uses: actions/upload-artifact@v2
        with:
          name: risedev-playground-$[<profile>]
          if-no-files-found: error
          path: |
            target/$[<target>]/risedev-playground
